// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TransmissionApp.Api.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TorrentPeers
    {
        /// <summary>
        /// Initializes a new instance of the TorrentPeers class.
        /// </summary>
        public TorrentPeers()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TorrentPeers class.
        /// </summary>
        public TorrentPeers(string address = default(string), string clientName = default(string), bool? clientIsChoked = default(bool?), bool? clientIsInterested = default(bool?), string flagStr = default(string), bool? isDownloadingFrom = default(bool?), bool? isEncrypted = default(bool?), bool? isUploadingTo = default(bool?), bool? isUTP = default(bool?), bool? peerIsChoked = default(bool?), bool? peerIsInterested = default(bool?), int? port = default(int?), double? progress = default(double?), int? rateToClient = default(int?), int? rateToPeer = default(int?))
        {
            Address = address;
            ClientName = clientName;
            ClientIsChoked = clientIsChoked;
            ClientIsInterested = clientIsInterested;
            FlagStr = flagStr;
            IsDownloadingFrom = isDownloadingFrom;
            IsEncrypted = isEncrypted;
            IsUploadingTo = isUploadingTo;
            IsUTP = isUTP;
            PeerIsChoked = peerIsChoked;
            PeerIsInterested = peerIsInterested;
            Port = port;
            Progress = progress;
            RateToClient = rateToClient;
            RateToPeer = rateToPeer;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientName")]
        public string ClientName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientIsChoked")]
        public bool? ClientIsChoked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientIsInterested")]
        public bool? ClientIsInterested { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flagStr")]
        public string FlagStr { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDownloadingFrom")]
        public bool? IsDownloadingFrom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEncrypted")]
        public bool? IsEncrypted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUploadingTo")]
        public bool? IsUploadingTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUTP")]
        public bool? IsUTP { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "peerIsChoked")]
        public bool? PeerIsChoked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "peerIsInterested")]
        public bool? PeerIsInterested { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "port")]
        public int? Port { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "progress")]
        public double? Progress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rateToClient")]
        public int? RateToClient { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rateToPeer")]
        public int? RateToPeer { get; set; }

    }
}
