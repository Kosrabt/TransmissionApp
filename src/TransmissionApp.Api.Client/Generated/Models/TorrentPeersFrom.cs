// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TransmissionApp.Api.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TorrentPeersFrom
    {
        /// <summary>
        /// Initializes a new instance of the TorrentPeersFrom class.
        /// </summary>
        public TorrentPeersFrom()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TorrentPeersFrom class.
        /// </summary>
        public TorrentPeersFrom(int? fromDHT = default(int?), int? fromIncoming = default(int?), int? fromLPD = default(int?), int? fromLTEP = default(int?), int? fromPEX = default(int?), int? fromTracker = default(int?))
        {
            FromDHT = fromDHT;
            FromIncoming = fromIncoming;
            FromLPD = fromLPD;
            FromLTEP = fromLTEP;
            FromPEX = fromPEX;
            FromTracker = fromTracker;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromDHT")]
        public int? FromDHT { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromIncoming")]
        public int? FromIncoming { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromLPD")]
        public int? FromLPD { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromLTEP")]
        public int? FromLTEP { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromPEX")]
        public int? FromPEX { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromTracker")]
        public int? FromTracker { get; set; }

    }
}
